package Factory;/** *  工厂方法模式订购披萨 */import java.io.*;public abstract class OrderPizza2 {    //定义一个抽象方法，createPizza , 让各个工厂子类自己实现    public abstract Pizza2 creatPizza2(String orderType);    // 构造器    public OrderPizza2() {        Pizza2 pizza2 = null;        String orderType; // 订购披萨的类型        do {            orderType = getType();            pizza2 = creatPizza2(orderType);//调用子类自己的披萨创建披萨            //输出pizza 制作过程            pizza2.prepare();            pizza2.bake();            pizza2.cut();            pizza2.box();        } while (true);    }    // 写一个方法，可以获取客户希望订购的披萨种类    private String getType() {        try {            BufferedReader strin = new BufferedReader(new InputStreamReader(System.in));            System.out.println("input pizza 种类:");            String str = strin.readLine();            return str;        } catch (IOException e) {            e.printStackTrace();            return "";        }    }}